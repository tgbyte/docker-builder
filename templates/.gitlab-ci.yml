cache:
  paths:
    - .trivy/

stages:
  - scan
  - build-image
  - build-manifest
  - verify

trivy:
  stage: scan
  script:
    - ${TRIVY_SCRIPT:-trivy.sh}
  allow_failure: true
  artifacts:
    expire_in: 1 day
    paths:
      - .trivy-run
      - .trivy-vulnerable
      - .version
    when: always
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "push"

.build-image-template: &build-image
  stage: build-image
  script:
    - ${BUILD_IMAGE_SCRIPT:-build-image.sh}
  artifacts:
    expire_in: 1 day
    paths:
      - results/
      - '**/results/'
      - .version
  needs:
    - job: trivy
      optional: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build-amd64:
  <<: *build-image

build-arm64:
  <<: *build-image
  rules:
    - if: $MULTIARCH == "1"
  variables:
    ARCH: arm64

build-manifest:
  stage: build-manifest
  script:
    - ${BUILD_MANIFEST_SCRIPT:-build-manifest.sh}
  needs:
    - job: trivy
      optional: true
    - job: build-amd64
    - job: build-arm64
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $MULTIARCH == "1"

.trivy-result-template: &trivy-result
  stage: verify
  script:
    - ${TRIVY_SCRIPT:-trivy.sh}
  needs:
    - job: trivy
      optional: true
    - job: build-amd64

trivy-result:
  <<: *trivy-result
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $MULTIARCH != "1" && $SKIP_TRIVY != "1"

trivy-result-multiarch:
  <<: *trivy-result
  needs:
    - !reference [.trivy-result-template, needs]
    - job: build-arm64
    - job: build-manifest
      artifacts: false
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $MULTIARCH == "1"  && $SKIP_TRIVY != "1"
